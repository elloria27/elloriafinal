
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://iczvmddzgupmwsicfrpi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImljcnZtZGR6Z3VwbXdzaWNmcnBpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDQyOTA2MTMsImV4cCI6MjAxOTg2NjYxM30.hInGhqTK9VdkSlUJpZ_KovmjdJ77CZDj0KphONnWQgM";

// Try to get configuration from localStorage if it exists
const getStoredConfig = () => {
  try {
    const storedConfig = localStorage.getItem('supabase_config');
    if (storedConfig) {
      const config = JSON.parse(storedConfig);
      if (config.url && config.key) {
        return { url: config.url, key: config.key };
      }
    }
    return null;
  } catch (e) {
    console.error('Error reading stored Supabase config:', e);
    return null;
  }
};

// Use stored config if available, otherwise use the default
const config = getStoredConfig() || { 
  url: SUPABASE_URL, 
  key: SUPABASE_PUBLISHABLE_KEY 
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = createClient<Database>(config.url, config.key);
