
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Default values used during installation process
const SUPABASE_URL = "https://euexcsqvsbkxiwdieepu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV1ZXhjc3F2c2JreGl3ZGllZXB1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc1OTE0ODYsImV4cCI6MjA1MzE2NzQ4Nn0.SA8nsT8fEf2Igd91FNUNFYxT0WQb9qmYblrxxE7eV4U";

// Get config values from localStorage if they exist (used during installation)
const getInstallConfig = () => {
  try {
    const config = localStorage.getItem('supabase_install_config');
    if (config) {
      const { url, key } = JSON.parse(config);
      if (url && key) {
        return { url, key };
      }
    }
  } catch (error) {
    console.error("Error loading Supabase install config:", error);
  }
  return null;
};

// Try to get installation config or use defaults
const config = getInstallConfig();
const supabaseUrl = config?.url || SUPABASE_URL;
const supabaseKey = config?.key || SUPABASE_PUBLISHABLE_KEY;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(supabaseUrl, supabaseKey);

/**
 * Update Supabase client configuration during installation
 * @param url New Supabase URL
 * @param key New Supabase key
 */
export const updateSupabaseConfig = (url: string, key: string) => {
  localStorage.setItem('supabase_install_config', JSON.stringify({ url, key }));
  // Force reload to apply new configuration
  window.location.reload();
};
